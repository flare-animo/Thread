import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

/*
* 线程池:创建一定数量的线程放入线程池中，用则取之，不用放回
*/

class NumberThread implements Runnable{

    @Override
    public void run() {
        for (int i = 0; i < 1000; i++) {
            if(i%2==0){
                System.out.println(Thread.currentThread().getName()+":"+i);
            }
        }
    }
}

class NumberThread1 implements Runnable{

    @Override
    public void run() {
        for (int i = 0; i < 1000; i++) {
            if(i%2!=0){
                System.out.println(Thread.currentThread().getName()+":"+i);
            }
        }
    }
}

public class ThreadPool {
    public static void main(String[] args) {
        //1.创建一定数量线程的线程池
        ExecutorService es = Executors.newFixedThreadPool(10);
        //2.执行指定的线程操作，需要实现Runnable接口或者Callable接口
        es.execute(new NumberThread());         //适用于Runnable
        es.execute(new NumberThread1());
        //es.submit(new NumberThread1());       //适用于Callable
        //3.关闭线程池
        es.shutdown();
    }
}
